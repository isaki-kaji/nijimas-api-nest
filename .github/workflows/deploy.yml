name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'デプロイ対象の環境'
        required: true
        default: 'pre'
        type: choice
        options:
          - pre
          - production

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: ${{ github.event.inputs.environment || 'pre' }}

    env:
      TARGET_ENV: ${{ github.event.inputs.environment || 'pre' }}
      ENV_FILE: .env.${{ github.event.inputs.environment || 'pre' }}
      GC_PROJECT_ID: ${{ secrets.GC_PROJECT_ID }}
      GC_REGION: ${{ vars.GC_REGION }}
      CLOUD_RUN_SERVICE: ${{ vars.CLOUD_RUN_SERVICE }}
      DATASOURCE_HOST: ${{ vars.DATASOURCE_HOST }}
      DATASOURCE_PORT: ${{ vars.DATASOURCE_PORT }}
      DATASOURCE_DATABASE: ${{ vars.DATASOURCE_DATABASE }}
      DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
      DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
      DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GC_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GC_PROJECT_ID }}

      - name: Generate "${{ env.ENV_FILE }}" for Cloud Run
        run: |
          {
            echo "DATASOURCE_HOST=${DATASOURCE_HOST}"
            echo "DATASOURCE_PORT=${DATASOURCE_PORT}"
            echo "DATASOURCE_DATABASE=${DATASOURCE_DATABASE}"
            echo "DATASOURCE_USERNAME=${DATASOURCE_USERNAME}"
            echo "DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}"
            echo "DATASOURCE_URL=${DATASOURCE_URL}"
          } > "${ENV_FILE}"
          echo "Generated ${ENV_FILE}:"
          cat "${ENV_FILE}"

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker "${GC_REGION}"-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t "${IMAGE_NAME}" .
        env:
          IMAGE_NAME: '${{ env.GC_REGION }}-docker.pkg.dev/${{ env.GC_PROJECT_ID }}/default/${{ env.CLOUD_RUN_SERVICE }}:latest'

      - name: Push Docker image to Artifact Registry
        run: |
          docker push "${IMAGE_NAME}"
        env:
          IMAGE_NAME: '${{ env.GC_REGION }}-docker.pkg.dev/${{ env.GC_PROJECT_ID }}/default/${{ env.CLOUD_RUN_SERVICE }}:latest'

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${CLOUD_RUN_SERVICE}" \
            --image "${IMAGE_NAME}" \
            --region "${GC_REGION}" \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "DATASOURCE_HOST=${DATASOURCE_HOST},"\
            "DATASOURCE_PORT=${DATASOURCE_PORT},"\
            "DATASOURCE_USERNAME=${DATASOURCE_USERNAME},"\
            "DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD},"\
            "DATASOURCE_DATABASE=${DATASOURCE_DATABASE},"\
            "DATASOURCE_URL=${DATASOURCE_URL}"
        env:
          IMAGE_NAME: '${{ env.GC_REGION }}-docker.pkg.dev/${{ env.GC_PROJECT_ID }}/default/${{ env.CLOUD_RUN_SERVICE }}:latest'
