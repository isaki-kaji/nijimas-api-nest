name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'デプロイ対象の環境'
        required: true
        default: pre
        type: choice
        options:
          - pre
          - com

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: ${{ inputs.environment || 'pre' }}

    env:
      GC_REGION: ${{ vars.GC_REGION }}
      CLOUD_RUN_SERVICE: ${{ vars.CLOUD_RUN_SERVICE }}
      DATASOURCE_HOST: ${{ vars.DATASOURCE_HOST }}
      DATASOURCE_PORT: ${{ vars.DATASOURCE_PORT }}
      DATASOURCE_DATABASE: ${{ vars.DATASOURCE_DATABASE }}
      IMAGE_NAME: '${{ vars.GC_REGION }}-docker.pkg.dev/${{ secrets.GC_PROJECT_ID }}/nijimas/${{ vars.CLOUD_RUN_SERVICE }}:latest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GC_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GC_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker "${GC_REGION}-docker.pkg.dev"

      - name: Build Docker image
        run: docker build -t "${IMAGE_NAME}" .

      - name: Push Docker image to Artifact Registry
        run: docker push "${IMAGE_NAME}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$CLOUD_RUN_SERVICE" \
            --image "${IMAGE_NAME}" \
            --region "${GC_REGION}" \
            --platform managed \
            --allow-unauthenticated \
            --update-secrets="/etc/secrets/firebase-credentials.json=firebase-credentials:latest" \
            --set-env-vars "FIREBASE_APPLICATION_CREDENTIALS=/etc/secrets/firebase-credentials.json,DATASOURCE_HOST=${DATASOURCE_HOST},DATASOURCE_PORT=${DATASOURCE_PORT},DATASOURCE_USERNAME=${DATASOURCE_USERNAME},DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD},DATASOURCE_DATABASE=${DATASOURCE_DATABASE},DATASOURCE_URL=${DATASOURCE_URL},DB_USE_SSL=true"
